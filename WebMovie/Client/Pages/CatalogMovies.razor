@page "/"
@page "/catalogmovies"
@using WebMovie.Shared
@inject HttpClient Http
@inject IMovieServices _moviesServices
@inject NavigationManager NavigationManager


<div class="py-5">
    <div class="container">
        <RadzenDropDown AllowClear="true" Placeholder="Filter" TValue="string" AllowVirtualization="true" Style="width:300px"
                        AllowFiltering="true" Data=@types
                        Change=@(args => OnChange(args, "Filter")) />
        <br />
        <br />
        <br />
        <div class="row hidden-md-up">
            @if (showPopular)
            {
                @foreach (var item in popularMoviesList)
                {
                    var poster = string.Concat("https://image.tmdb.org/t/p/w500", item.poster_path);
                    <div class="col-md-4">
                        <div class="cards-deck">
                            <a @onclick="@(() => informationMovies(item))">
                                <div class="cards" style="width: 18rem; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);transition: 0.5s;">
                                    <div class="card-header">
                                        @item.title
                                    </div>
                                    <img class="cards-img-top" src="@poster" alt="@item.title">
                                    <div class="cards-footer" style="height:120px">
                                        <p style="font-size:12px; font-weight:bold">Release Date:<span>@item.release_date</span></p>
                                        <p style="font-size:12px; font-weight:bold">Rating:</p>
                                        <RadzenArcGauge Style="width: 100px; height: 100px;">
                                            <RadzenArcGaugeScale Min="0" Max="10" X="0.2" Y="0.18">
                                                <RadzenArcGaugeScaleValue Value=@item.vote_average Fill="#80b918">
                                                    <Template Context="value">
                                                        <h4 style="font-size:11px;">
                                                            @value.Value
                                                        </h4>
                                                    </Template>
                                                </RadzenArcGaugeScaleValue>
                                            </RadzenArcGaugeScale>
                                        </RadzenArcGauge>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            }

            @if (showUpcoming)
            {
                @foreach (var item in upcomingMoviesList)
                {
                    var poster = string.Concat("https://image.tmdb.org/t/p/w500", item.poster_path);
                    <div class="col-md-4">
                        <div class="cards-deck">
                            <a @onclick="@(() => informationMovies(item))">
                                <div class="cards" style="width: 18rem; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);transition: 0.5s;">
                                    <div class="card-header">
                                        @item.title
                                    </div>
                                    <img class="cards-img-top" src="@poster" alt="@item.title">
                                    <div class="cards-footer" style="height:120px">
                                        <p style="font-size:12px; font-weight:bold">Release Date:<span>@item.release_date</span></p>
                                        <p style="font-size:12px; font-weight:bold">Rating:</p>
                                        <RadzenArcGauge Style="width: 100px; height: 100px;">
                                            <RadzenArcGaugeScale Min="0" Max="10" X="0.2" Y="0.18">
                                                <RadzenArcGaugeScaleValue Value=@item.vote_average Fill="#80b918">
                                                    <Template Context="value">
                                                        <h4 style="font-size:11px;">
                                                            @value.Value
                                                        </h4>
                                                    </Template>
                                                </RadzenArcGaugeScaleValue>
                                            </RadzenArcGaugeScale>
                                        </RadzenArcGauge>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

@code {

    List<Result> popularMoviesList = new List<Result>();
    List<Result> upcomingMoviesList = new List<Result>();
    List<string> types = new List<string>();
    Result MovieDetail = new Result();
    Constants Constants;
    bool showPopular = true;
    bool showUpcoming = false;


    protected override async Task OnInitializedAsync()
    {
        popularMoviesList = await _moviesServices.GetPopularMovies();
        upcomingMoviesList = await _moviesServices.GetUpcomingMovies();
        FillArray();
    }

    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        if (value.ToString() == Constants.itemFilterPopular)
        {
            showPopular = true;
            showUpcoming = false;
        }
        else
        {
            showUpcoming = true;
            showPopular = false;
        }
    }

    public async Task informationMovies(Result movie)
    {
        NavigationManager.NavigateTo($"{Constants.routeToInformationMovies}/{movie.id}");
    }

    public void FillArray()
    {
        types.Add(Constants.itemFilterPopular);
        types.Add(Constants.itemFilterUpcoming);
    }
}
